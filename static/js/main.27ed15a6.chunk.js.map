{"version":3,"sources":["contexts.js","utils.js","components/Header/Header.js","WebAPI.js","pages/HomePage/HomePage.js","pages/RegisterPage/RegisterPage.js","pages/LoginPage/LoginPage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","pages/AboutPage/AboutPage.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","div","Brand","h1","NavLeftContainer","NavbarList","Nav","Link","props","$active","Header","pathname","useLocation","useContext","user","setUser","isGettingUser","history","useHistory","to","username","onClick","push","BASE_URL","getMe","fetch","headers","authorization","then","res","json","Root","PostContainer","PostTitle","PostDate","PageControllerContainer","PageController","PageControllerFirst","PageControllerPrevious","PageControllerNext","PageControllerLast","CurrentPage","Loading","Post","post","id","title","Date","createdAt","toLocaleString","HomePage","useState","posts","setPosts","offset","setOffset","currentPage","setCurrentPage","isGettingPosts","setIsGettingPosts","totalPageCount","Math","ceil","length","useEffect","filter","index","map","RegisterForm","form","RegisterInputContainer","ErrorMessage","SubmitButton","button","RegisterPage","setUsername","nickname","setNickname","password","setPassword","errorMessage","setErrorMessage","onSubmit","e","preventDefault","method","body","JSON","stringify","register","data","ok","message","console","log","response","toString","type","name","value","onChange","target","LoginForm","LoginInputContainer","LoginPage","login","PostHeader","PostInfoContainer","PostAuthor","PostTime","PostContent","PostPage","setPost","author","setAuthor","useParams","getPost","NewPostContainer","PageTitle","InputTitle","NewPostForm","NewPostTitle","input","NewPostContent","textarea","NewPostSubmitButtonContainer","NewPostSubmitButton","NewPostPage","setTitle","content","setContent","addPost","AboutContainer","AboutHeader","AboutTitle","AboutContent","AboutPage","App","setIsGettingUser","Provider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27ed15a6.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\n/* eslint-disable import/no-unresolved */\nimport { createContext } from 'react';\n\n// 1. 利用 createContext 新增 AuthContext\nexport const AuthContext = createContext(null);\n","const TOKEN_NAME = 'token';\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable quotes */\n/* eslint-disable semi */\n/* eslint-disable import/no-unresolved */\nimport { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext } from '../../contexts'\nimport { setAuthToken } from '../../utils'\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n  box-sizing: border-box;\n  padding: 0 32px;\n\n  color: #555;\n  background-color: white;\n\n  /* color: white; */\n  /* background-color: #000035;  */\n  line-height: 64px;\n\n  & * {\n    color: #555;\n    /* border: solid 1px rgba(0, 0, 0, 0.3) */\n  }\n`\n\nconst Brand = styled.h1`\n  margin: 0 20px 0 0;\n`\nconst NavLeftContainer = styled.div`\n  display: flex;\n  height: 100%;\n`\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst Nav = styled(Link)`\n  padding: 0 10px;\n  width: 100px;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n\n  /* &:hover {\n    background-color: #9999aa\n  } */\n\n  ${props => props.$active && `background: rgba(0, 0, 0, 0.1)`}\n`\n\nfunction Header() {\n  const location = useLocation()\n  const { pathname } = location\n\n  // get user\n  const { user, setUser, isGettingUser } = useContext(AuthContext)\n  const history = useHistory();\n\n  // 8. handleLogout => 1. token 設為 '', 2. 透過 useHistory 導回首頁\n  function handleLogout() {\n    setAuthToken('');\n    // 9. 由於登入會導回首頁，造成不能 push 首頁, 但不影響功能\n    history.push('/');\n\n    // 10. user => null\n    setUser(null);\n  }\n\n  return (\n    <HeaderContainer>\n      <NavLeftContainer>\n        <Brand>部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={pathname === '/'}>首頁</Nav>\n          <Nav to=\"/about\" $active={pathname === '/about'}>關於</Nav>\n          {!isGettingUser && user && <Nav to=\"/new-post\" $active={pathname === '/new-post'}>發布文章</Nav>}\n        </NavbarList>\n      </NavLeftContainer>\n\n      <NavbarList>\n        {!isGettingUser && user && <div>{user.username}</div>}\n        {!isGettingUser && user && <Nav to=\"/\" onClick={handleLogout}>登出</Nav>}\n        {!isGettingUser && !user && <Nav to=\"/login\" $active={pathname === '/login'}>登入</Nav>\n        }\n        {!isGettingUser && !user && <Nav to=\"/register\" $active={pathname === '/register'}>註冊</Nav>\n        }\n      </NavbarList>\n\n    </HeaderContainer>\n  );\n}\n\n\nexport default Header;\n","import { getAuthToken } from './utils';\n\nconst BASE_URL = 'https://student-json-api.lidemy.me';\n\nexport function register({ username, nickname, password }) {\n  return fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  })\n    .then(res => res.json());\n}\n\nexport function getPosts() {\n  // 一次只拿 5 筆\n  // _start=0&_end=5 => 會取到結果中 index=5-8 的 post\n  // 但是為了拿到全部 post 的數量，所以採用發一次 API，之後控制顯示的 5 筆\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`)\n    .then(res => res.json());\n}\n\nexport function getPost(id) {\n  return fetch(`${BASE_URL}/posts/${id}/?_expand=user`)\n    .then(res => res.json());\n}\n\nexport function login(username, password) {\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  })\n    .then(res => res.json());\n}\n\nexport function getMe() {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      // get token from localStorage\n      authorization: `Bearer ${token}`,\n    },\n  })\n    .then(res => res.json());\n}\n\nexport function addPost(title, body) {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${token}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  })\n    .then(res => res.json());\n}\n\nexport function deletePost(id) {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n      'content-type': 'application/json',\n    },\n  })\n    .then(res => res.json());\n}\n","/* eslint-disable no-shadow */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable quotes */\n/* eslint-disable semi */\n/* eslint-disable import/no-unresolved */\nimport { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { getPosts } from '../../WebAPI'\n\nconst Root = styled.div``\nconst PostContainer = styled.div`\n  margin: 0 auto;\n  padding: 16px;\n  width: 600px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  border-bottom: solid 1px rgba(0, 0, 0, 0.2);\n`\nconst PostTitle = styled(Link)`\n  font-size: 20px;\n  max-width: 360px;\n  overflow: hidden;\n  cursor: pointer;\n  color: #555;\n  text-decoration: none;\n  word-break: break-word;\n`\nconst PostDate = styled.div`\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.6);\n`\n\nconst PageControllerContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  & * {\n    margin: 0 10px;\n  }\n`\nconst PageController = styled.div`\n  width: 50px;\n  height: 30px;\n  color: #555;;\n  cursor: pointer;\n  text-align: center;\n  line-height: 30px;\n  border: solid 1px #555;\n`\n\nconst PageControllerFirst = styled(PageController)``\nconst PageControllerPrevious = styled(PageController)``\nconst PageControllerNext = styled(PageController)``\nconst PageControllerLast = styled(PageController)``\nconst CurrentPage = styled(PageController)`\n  border: none;\n`\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 48px;\n  background: rgba(0, 0, 0, 0.5);\n`\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      {/* <PostContent>{post.content}</PostContent> */}\n    </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n}\n\nfunction HomePage() {\n  const [posts, setPosts] = useState([])\n  const [offset, setOffset] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [isGettingPosts, setIsGettingPosts] = useState(true)\n\n  const totalPageCount = Math.ceil(posts.length / 5)\n\n  useEffect(() => {\n    getPosts().then((posts) => {\n      setPosts(posts)\n      setIsGettingPosts(false)\n    })\n  }, [])\n\n  return (\n    <Root>\n      {isGettingPosts && <Loading>Loading...</Loading>}\n      { !isGettingPosts\n        && posts\n          .filter((post, index) => index >= offset && index < (offset + 5))\n          .map(post => <Post post={post} key={post.id} />)\n      }\n      {!isGettingPosts\n        && (\n        <PageControllerContainer>\n          <PageControllerFirst onClick={() => {\n            setOffset(0)\n            setCurrentPage(1)\n          }}\n          >\n            {\"<<\"}\n          </PageControllerFirst>\n          <PageControllerPrevious onClick={() => {\n            if (currentPage <= 1) return\n            setOffset(offset - 5)\n            setCurrentPage(currentPage - 1)\n          }}\n          >\n            {\"<\"}\n          </PageControllerPrevious>\n\n          <CurrentPage>{`${currentPage} / ${totalPageCount}`}</CurrentPage>\n\n          <PageControllerNext onClick={() => {\n            if (currentPage >= totalPageCount) return\n            setOffset(offset + 5)\n            setCurrentPage(currentPage + 1)\n          }}\n          >\n            {\">\"}\n          </PageControllerNext>\n          <PageControllerLast onClick={() => {\n            setOffset((totalPageCount - 1) * 5)\n            setCurrentPage(totalPageCount)\n          }}\n          >\n            {\">>\"}\n          </PageControllerLast>\n        </PageControllerContainer>\n        )\n      }\n    </Root>\n  );\n}\n\nexport default HomePage;\n","/* eslint-disable consistent-return */\n/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable quotes */\n/* eslint-disable semi */\n/* eslint-disable import/no-unresolved */\nimport { useState, useContext } from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from \"react-router-dom\";\nimport { register, getMe } from '../../WebAPI'\nimport { setAuthToken } from '../../utils'\nimport { AuthContext } from '../../contexts';\n\nconst RegisterForm = styled.form`\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px auto;\n  text-align: center;\n`\nconst RegisterInputContainer = styled.div`\n  & + & {\n    margin-top: 10px;\n  }\n`\n\nconst ErrorMessage = styled.div`\n  font-size: 16px;\n  color: red;\n`\n\nconst SubmitButton = styled.button`\n  margin-top: 20px;\n  padding: 5px 10px;\n  width: 60px;\n`\n\nfunction RegisterPage() {\n  const [username, setUsername] = useState('')\n  const [nickname, setNickname] = useState('')\n  const [password, setPassword] = useState('')\n\n  // show error message\n  const [errorMessage, setErrorMessage] = useState('')\n\n  // useHistory\n  const history = useHistory()\n\n  const { setUser } = useContext(AuthContext)\n\n  function handleRegisterSubmit(e) {\n    e.preventDefault()\n    register({\n      username,\n      nickname,\n      password,\n    }).then((data) => {\n      // Register fail\n      if (data.ok === 0) {\n        return setErrorMessage(data.message)\n      }\n\n      // Register success\n      setErrorMessage(null)\n      console.log(data);\n      const { token } = data;\n      // 把 token 寫入 localStorage\n      // 也可以另開 utils.js => setAuthToken, 再引入\n      // localStorage.setItem('token', token)\n      setAuthToken(token);\n\n      // 4. 存取 getMe API, 取得 user data => setUser(data)\n      getMe().then((response) => {\n        console.log(response);\n        if (response.ok !== 1) {\n          // Register fail => set token to null, show errorMessage\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n\n        setUser(response.data)\n\n        // redirect to home page\n        history.push('/')\n      })\n    })\n  }\n\n  return (\n    <RegisterForm onSubmit={handleRegisterSubmit}>\n      <h1>註冊</h1>\n      <RegisterInputContainer>\n        Username:\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value)\n          }}\n        />\n      </RegisterInputContainer>\n      <RegisterInputContainer>\n        Nickname:\n        <input\n          type=\"text\"\n          name=\"nickname\"\n          value={nickname}\n          onChange={(e) => {\n            setNickname(e.target.value)\n          }}\n        />\n      </RegisterInputContainer>\n      <RegisterInputContainer>\n        Password:\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value)\n          }}\n        />\n      </RegisterInputContainer>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <SubmitButton type=\"submit\">註冊</SubmitButton>\n    </RegisterForm>\n  );\n}\n\nexport default RegisterPage;\n","/* eslint-disable consistent-return */\n/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable quotes */\n/* eslint-disable semi */\n/* eslint-disable import/no-unresolved */\nimport { useState, useContext } from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from \"react-router-dom\";\nimport { login, getMe } from '../../WebAPI'\nimport { setAuthToken } from '../../utils'\nimport { AuthContext } from '../../contexts';\n\nconst LoginForm = styled.form`\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px auto;\n  text-align: center;\n`\nconst LoginInputContainer = styled.div`\n  & + & {\n    margin-top: 10px;\n  }\n`\n\nconst ErrorMessage = styled.div`\n  font-size: 16px;\n  color: red;\n`\n\nconst SubmitButton = styled.button`\n  margin-top: 20px;\n  padding: 5px 10px;\n  width: 60px;\n`\n\nfunction LoginPage() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  // show error message\n  const [errorMessage, setErrorMessage] = useState('')\n\n  // useHistory\n  const history = useHistory()\n\n  const { setUser } = useContext(AuthContext)\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    login(username, password)\n      .then((data) => {\n        // login fail\n        if (data.ok === 0) {\n          return setErrorMessage(data.message)\n        }\n\n        // login success\n        setErrorMessage(null)\n        const { token } = data;\n        // 把 token 寫入 localStorage\n        // 也可以另開 utils.js => setAuthToken, 再引入\n        // localStorage.setItem('token', token)\n        setAuthToken(token);\n\n        // 4. 存取 getMe API, 取得 user data => setUser(data)\n        getMe().then((response) => {\n          console.log(response);\n          if (response.ok !== 1) {\n            // login fail => set token to null, show errorMessage\n            setAuthToken(null);\n            return setErrorMessage(response.toString());\n          }\n\n          setUser(response.data)\n\n          // redirect to home page\n          history.push('/')\n        })\n      })\n  }\n\n  return (\n    <LoginForm onSubmit={handleSubmit}>\n      <h1>登入</h1>\n      <LoginInputContainer>\n        Username:\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value)\n          }}\n        />\n      </LoginInputContainer>\n      <LoginInputContainer>\n        Password:\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value)\n          }}\n        />\n      </LoginInputContainer>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <SubmitButton type=\"submit\">登入</SubmitButton>\n    </LoginForm>\n  );\n}\n\nexport default LoginPage;\n","/* eslint-disable no-shadow */\n/* eslint-disable consistent-return */\n/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable quotes */\n/* eslint-disable semi */\n/* eslint-disable import/no-unresolved */\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from \"react-router-dom\";\nimport { getPost } from '../../WebAPI'\n\nconst Root = styled.div``\nconst PostContainer = styled.div`\n  width: 600px;\n  margin: 20px auto 0 auto;\n  padding: 20px;\n  box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.1);\n`\nconst PostHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 20px 0;\n`\n\nconst PostTitle = styled.div`\n  font-size: 36px;\n  color: #555;\n`\n\nconst PostInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst PostAuthor = styled.div`\n  margin: 10px 10px 0 0;\n  font-size: 16px;\n  color: #aaa;\n`\n\nconst PostTime = styled(PostAuthor)``\nconst PostContent = styled.div`\n  padding: 20px 0;\n  color: #555;\n  word-break: break-word;\n`\n\nfunction PostPage() {\n  const [post, setPost] = useState({})\n  const [author, setAuthor] = useState(null)\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPost(id).then((post) => {\n      setPost(post);\n      setAuthor(post.user.nickname);\n    })\n  }, [])\n\n  return (\n    <Root>\n      <PostContainer>\n        <PostHeader>\n          <PostTitle>{post.title}</PostTitle>\n          <PostInfoContainer>\n            {author && <PostAuthor>{`作者：${author}`}</PostAuthor>}\n            <PostTime>{post.createdAt && new Date(post.createdAt).toLocaleString()}</PostTime>\n          </PostInfoContainer>\n        </PostHeader>\n        <PostContent>{post.body}</PostContent>\n      </PostContainer>\n    </Root>\n  );\n}\n\nexport default PostPage;\n","/* eslint-disable consistent-return */\n/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable quotes */\n/* eslint-disable semi */\n/* eslint-disable import/no-unresolved */\nimport { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { addPost } from '../../WebAPI';\n\nconst Root = styled.div``\nconst NewPostContainer = styled.div`\n  width: 600px;\n  margin: 20px auto 0 auto;\n  padding: 20px;\n  box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.1);\n`\n\nconst PageTitle = styled.div`\n  padding: 20px 0;\n  font-size: 36px;\n  color: #333;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n`\nconst InputTitle = styled.div`\n  margin-bottom: 5px;\n`\nconst NewPostForm = styled.form`\n  padding: 20px 0;\n`\n\nconst NewPostTitle = styled.input`\n  margin-bottom: 10px;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst NewPostContent = styled.textarea`\n  margin-bottom: 10px;\n  width: 100%;\n  height: 400px;\n  box-sizing: border-box;\n  resize: vertical;\n`\n\nconst ErrorMessage = styled.div`\n  margin-bottom: 5px;\n  font-size: 16px;\n  color: red;\n`\n\nconst NewPostSubmitButtonContainer = styled.div`\n  text-align: right;\n`\nconst NewPostSubmitButton = styled.button``\n\nfunction NewPostPage() {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const history = useHistory()\n\n  function handleTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleContentChange(e) {\n    setContent(e.target.value);\n  }\n\n  function handleNewPostSubmit(e) {\n    e.preventDefault();\n    console.log(title, content);\n    addPost(title, content).then((response) => {\n      console.log(response)\n      if (response.ok === 0) {\n        return setErrorMessage(response.message)\n      }\n      history.push('/')\n    })\n  }\n\n  return (\n    <Root>\n      <NewPostContainer>\n        <PageTitle>發布文章</PageTitle>\n        <NewPostForm onSubmit={handleNewPostSubmit}>\n          <InputTitle>文章標題：</InputTitle>\n          <NewPostTitle value={title} onChange={handleTitleChange} />\n          <InputTitle>文章內容：</InputTitle>\n          <NewPostContent value={content} onChange={handleContentChange} />\n          <NewPostSubmitButtonContainer>\n            {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n            <NewPostSubmitButton>發布</NewPostSubmitButton>\n          </NewPostSubmitButtonContainer>\n        </NewPostForm>\n      </NewPostContainer>\n    </Root>\n  );\n}\n\nexport default NewPostPage;\n","/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable quotes */\n/* eslint-disable semi */\n/* eslint-disable import/no-unresolved */\nimport styled from 'styled-components';\n\nconst Root = styled.div``\nconst AboutContainer = styled.div`\n  width: 600px;\n  margin: 20px auto 0 auto;\n  padding: 20px;\n  box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.1);\n`\nconst AboutHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 20px 0;\n`\n\nconst AboutTitle = styled.div`\n  font-size: 36px;\n  color: #555;\n`\n\nconst AboutContent = styled.div`\n  padding: 20px 0;\n  color: #555;\n  word-break: break-word;\n`\n\nfunction AboutPage() {\n  return (\n    <Root>\n      <AboutContainer>\n        <AboutHeader>\n          <AboutTitle>\n            About\n          </AboutTitle>\n        </AboutHeader>\n        <AboutContent>\n          Lidemy React homework - blog\n        </AboutContent>\n      </AboutContainer>\n    </Root>\n  );\n}\n\nexport default AboutPage;\n","/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  HashRouter as Router, Switch, Route,\n} from 'react-router-dom';\nimport Header from '../Header';\nimport HomePage from '../../pages/HomePage';\nimport RegisterPage from '../../pages/RegisterPage';\nimport LoginPage from '../../pages/LoginPage';\nimport PostPage from '../../pages/PostPage';\nimport NewPostPage from '../../pages/NewPostPage';\nimport AboutPage from '../../pages/AboutPage';\n\n\nimport { AuthContext } from '../../contexts';\nimport { getMe } from '../../WebAPI';\nimport { getAuthToken } from '../../utils';\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isGettingUser, setIsGettingUser] = useState(true);\n\n  useEffect(() => {\n    if (getAuthToken) {\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n          setIsGettingUser(false);\n        }\n      });\n    }\n  }, []);\n\n\n  return (\n    <AuthContext.Provider value={{ user, setUser, isGettingUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            {/* 加上 exact 表示完全匹配 */}\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <PostPage />\n            </Route>\n            <Route path=\"/new-post\">\n              <NewPostPage />\n            </Route>\n            <Route path=\"/about\">\n              <AboutPage />\n            </Route>\n          </Switch>\n\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}